version: "3.8"

services:

  # The web server
  web:
    command: waitress-serve --listen *:8000 web:app
    restart: always
    ports:
      - "8000:8000"
    build:
      context: .

  # The task scheduler
  scheduler:
    command: python scheduler.py
    restart: always
    build:
      context: .

  # Your application (it runs main.py)
  app:
    restart: always
    build:
      context: .

  # Worker for Redis queue
  queue:
    command: ["rq", "worker", "--with-scheduler", "--url", "redis://redis:6379/0"]
    restart: always
    build:
      context: .
    depends_on:
      - redis

  # Local AWS Services
  localstack:
    image: localstack/localstack
    restart: always
    environment:
      - HOSTNAME=localstack
      - SERVICES=s3,ses
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  # MySQL Database
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: example
      MYSQL_ROOT_PASSWORD: example

  # PostgreSQL Database
  postgres:
    image: postgres:13.3-alpine
    restart: always
    environment:
      POSTGRES_DB: example
      POSTGRES_USER: user
      POSTGRES_PASSWORD: example

  # MSSQL Database
  mssql:
    restart: always
    image: mcr.microsoft.com/mssql/server:2019-CU8-ubuntu-16.04
    environment:
      - "ACCEPT_EULA=Y"
      - "SA_PASSWORD=Ex4mpl3w1thv3ryl0ngp4ssw0rd!"

  # MongoDB Database
  mongo:
    image: mongo:4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  # Redis instance
  redis:
    image: redis:6-alpine
    restart: always
