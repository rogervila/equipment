name: test

on:
  push:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pip install coverage runtype faker
          python -m coverage run -m unittest discover -s tests

      - name: Run project tests
        if: matrix.os == 'ubuntu-latest'
        run: |
          sed -ri -e 's!CURRENT_VERSION!9.9.9!g' pyproject.toml
          python -m build
          python -m pip install ./dist/equipment-9.9.9.tar.gz
          cd project
          rm -rf dist
          rm -rf equipment
          python -m pip install .
          python -m coverage run -m unittest
          cp .env.example .env
          python -m equipment compile dist
          cd dist
          python main.pyc
